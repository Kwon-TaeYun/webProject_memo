package project.memo_program.memo;

import org.springframework.stereotype.Repository;

import java.time.LocalDateTime;
import java.util.*;

@Repository
public class MemoRepository {
    private static final Map<Long, Memo> store = new HashMap<>();
    private static long sequence = 0L;

    public Memo save(Memo memo) {
        memo.setId(++sequence);
        store.put(memo.getId(), memo);
        return memo;
    }//저장 기능

    public Memo findById(Long id) 
        return store.get(id);
    }//검색 기능 1

    public Optional<Memo> findByTitle(String title){
        return findAll().stream()
                .filter(m->m.getTitle().equals(title))
                .findFirst();
    }//검색 기능 2: 제목으로 메모장 찾기

    public List<Memo> findAll() {
        return new ArrayList<>(store.values());
    }//전체 리스트 보여주기

    public void update(Long itemId, Memo updateParam) {
        Memo findItem = findById(itemId);
        findItem.setTitle(updateParam.getTitle());
        findItem.setDate(String.valueOf(LocalDateTime.now()));
        findItem.setContents(updateParam.getContents());
    }//메모 수정

    public void delete(Long memoId) {
        store.remove(memoId);
    }//메모 삭제

    public void clearStore() {
        store.clear();
    }



}
